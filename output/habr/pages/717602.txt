<div>
 <div class="article-formatted-body article-formatted-body article-formatted-body_version-2">
  <div xmlns="http://www.w3.org/1999/xhtml">
   <figure class="full-width ">
    <img src="https://habrastorage.org/r/w780q1/getpro/habr/upload_files/d67/53a/1bd/d6753a1bdb4eaecca6ebb7aab212e5bf.jpg" width="1560" height="880" data-src="https://habrastorage.org/getpro/habr/upload_files/d67/53a/1bd/d6753a1bdb4eaecca6ebb7aab212e5bf.jpg" data-blurred="true">
    <figcaption></figcaption>
   </figure>
   <p>«Разработка по&nbsp;Agile» не&nbsp;предполагает точных сроков реализации функциональности, но&nbsp;каждому владельцу продукта прилетает в&nbsp;неделю сотни «А когда будет готово...?». Даже когда продукт находится на&nbsp;этапе погружения команды в&nbsp;бизнес‑контекст и не&nbsp;завершены исследования, требуется определить сроки выхода MVP, ведь продукт или&nbsp;фича нужны «вчера» и важность стратегического планирования на&nbsp;квартал или&nbsp;год никто не&nbsp;отменял. Рассмотрим ситуацию, когда продукт не&nbsp;находится на&nbsp;ПРОДе и нет точного состава MVP.</p>
   <p>Цель статьи&nbsp;— рассказать об&nbsp;оценке бэклога в&nbsp;полной неопределенности.</p>
   <p>Прежде, чем выдвигать гипотезы по&nbsp;срокам, важно сделать ряд «приседаний» с&nbsp;командой после дискавери‑фазы: это декомпозировать продукт на&nbsp;фичи, определить MVP, составить USM и только потом с&nbsp;видением продукта приходить к&nbsp;архитекторам и команде, чтобы обсудить не&nbsp;просто оценки, а&nbsp;реализацию и зависимости. Здесь сталкиваемся с&nbsp;рядом <s>проблем </s> задач, например, если команда оценивает бэклог в&nbsp;SP, что&nbsp;невозможно и не&nbsp;правильно переводить в&nbsp;человеко‑дни, а&nbsp;положить SP на&nbsp;календарный график и диаграмму Ганта нереально (подробнее о&nbsp;SP <a href="https://habr.com/ru/company/bimeister/blog/715114/">туточки</a>) или&nbsp;есть зависимости от&nbsp;фичей смежных команд и сроки их реализации еще неизвестны, или&nbsp;архитектура еще не&nbsp;готова и остается только выдвигать гипотезы, как&nbsp;будет реализовано. Вот здесь начинается интересный квест.</p>
   <p>Владелец продукта вместе с&nbsp;командой разработки могут выбрать такой вариант: оценить риски, заложить время на&nbsp;дополнительные исследования и еще что‑нибудь&nbsp;— в&nbsp;таком случае мы окажемся с&nbsp;MVP через год‑два, что&nbsp;не&nbsp;подойдет никому. И ведь одной из&nbsp;важных задач продакта&nbsp;— это урезать функциональность на&nbsp;MVP по&nbsp;всем канонам и сделать&nbsp;быстро/дешево. В&nbsp;связи с&nbsp;этим рассмотрим шаги для&nbsp;проведения первичной оценки, когда есть понимание функциональности, но&nbsp;еще не&nbsp;проведен подробный бизнес‑анализ. Забегая вперед, это не «красная таблетка» и эти шаги не&nbsp;спасут от&nbsp;возможных изменений состава MVP, переприоритезации или&nbsp;влетающих новых важных задач. Ниже описанные шаги дают вектор движения и помогают сформировать ответ на&nbsp;вопрос «Когда?», не&nbsp;скатываясь в&nbsp;Waterfall.</p>
   <h4>Шаг 1. Декомпозиция</h4>
   <p>Когда уже есть понимание по&nbsp;процессу и какие существующие функциональности затрагивает продукт, дробим на&nbsp;фичи и функциональности в&nbsp;формате user story. Здесь частая ошибка&nbsp;— горизонтальная декомпозиция на&nbsp;основе архитектуры. После реализации такой фичи на&nbsp;графике красиво светится отметка «Done», но&nbsp;ценности для&nbsp;пользователя нет и владелец продукта, краснея, пытается объяснить на&nbsp;пальцах, что&nbsp;это важная фича, она очень нужна, а&nbsp;эффект в&nbsp;цифрах может предоставить после реализации пары‑тройки фичей. Стоит помнить, что&nbsp;каждая, прям каждая, фича продукта должна иметь эффект и метрики оценки&nbsp;— мы&nbsp;же строим бизнес, а&nbsp;не&nbsp;галочки на&nbsp;графике рисуем.</p>
   <p>DOD: список фичей с&nbsp;описанием функциональности в&nbsp;разрезе эпиков. По&nbsp;описанию&nbsp;— хотя&nbsp;бы пару предложений, в&nbsp;идеале полноценные критерии приемки.</p>
   <h4>Шаг 2. Подготовка</h4>
   <ol>
    <li><p>До&nbsp;встречи с&nbsp;командой стоит обсудить архитектуру и иметь четкое представление о&nbsp;ней для&nbsp;рассказа команде.</p></li>
    <li><p>Если уже понятны зависимости, не&nbsp;поленитесь дойти до&nbsp;смежных команд&nbsp;— хотя&nbsp;бы узнать их явки/пароли и зафиксировать всё для&nbsp;будущих взаимодействий, ведь вы уже капнули в&nbsp;их сторону и стоит оставить след во&nbsp;благо команды.</p></li>
    <li><p>Стоит позаботиться о&nbsp;визуализации&nbsp;— буквально пару кубиков в&nbsp;схеме, чтобы объяснить концепцию команде.</p></li>
    <li><p>Определите структуру, чтобы с&nbsp;первого рассказа сложилась вся картинка.</p></li>
   </ol>
   <p>DOD: Схема, например, в&nbsp;miro (это может&nbsp;быть драфтом USM).</p>
   <h4>Шаг 3. Общение с командой</h4>
   <p>Это самый главный шаг при&nbsp;оценке бэклога. По&nbsp;моему мнению, оценивать бэклог без&nbsp;команды не&nbsp;стоит, даже если ранее реализовывали аналогичные фичи и стейкхолдер просит срочно назвать сроки готовности. Для&nbsp;получения более реальной первичной оценки до&nbsp;анализа объясните команде, какие пункты стоит учесть: это ревью, устранение багов, время на&nbsp;погружение и что&nbsp;это оценка первичная, а&nbsp;не&nbsp;груминг по&nbsp;результату системного анализа. Возникнет вопрос, стоит&nbsp;ли отвлекать всю команду на&nbsp;данном этапе. Мы проводим такую оценку в&nbsp;составе по&nbsp;одному человеку от&nbsp;роли, но&nbsp;в&nbsp;оценке стоит учитывать, что&nbsp;оценивать будет один человек, а&nbsp;кодить может другой. В&nbsp;ходе обсуждения фичи можно закопаться в&nbsp;деталях реализации, что&nbsp;на&nbsp;данном этапе не&nbsp;стоит делать, и, если есть несколько вариантов, то оценивайте средний или&nbsp;негативный сценарий реализации. Мы проводим оценку по&nbsp;ролям, чтобы определить планируемую нагрузку. Напомню, что&nbsp;цель первичной оценки определить сроки и очевидно что&nbsp;единицу измерения выбираем человеко‑дни.</p>
   <p>DOD: долгожданные цифры по&nbsp;каждой фиче.</p>
   <h4>Шаг 4. Приоритизация</h4>
   <p>Существует много фреймворков, на&nbsp;них останавливаться не&nbsp;будем,&nbsp;быстро и на&nbsp;цифрах советую использовать ICE (чтобы не&nbsp;гуглить, расшифрую: Impact&nbsp;— это влияние, иначе выгода от&nbsp;фичи, Confidence&nbsp;— уверенность, кстати, здесь прям запрещено владельцу продукта единолично проставлять баллы и Ease&nbsp;— простота реализации), но&nbsp;здесь возникает вопрос как&nbsp;приоритизировать бэклог, если в&nbsp;нем всегда существуют технический долг и архитектурные задачки. Есть примеры, когда бэклог команды пилят на&nbsp;доли&nbsp;— 50% новой функциональности, 30% технический долг и 20% архитектуру, еще оставляют какой‑то процент на&nbsp;баги, но&nbsp;на&nbsp;практике, если соблюдать такой баланс, то мы режем сук на&nbsp;котором сидим и срок доставки ценности увеличивается вдвое. Часто слышу, что&nbsp;тех долг невозможно оценить со стороны бизнеса и всё такое. Рекомендую, составить список качественных и количественных параметров к&nbsp;ICE, по&nbsp;которым можно оценивать любую фичу и в&nbsp;т.ч. тех долг, например, сокращение рисков или&nbsp;влияние на&nbsp;доступность системы. Добавлю, что&nbsp;приоритизация нужна в&nbsp;том случае, если владелец продукта определяет развитие продукта, а&nbsp;не&nbsp;подписанное ТЗ с&nbsp;заказчиком.</p>
   <p>DOD: лейбл приоритета на&nbsp;каждой фиче.</p>
   <h4>Шаг 5. Определение MVP</h4>
   <p>Каждый продакт знает все методики. Напомню&nbsp;лишь, что&nbsp;стоит учитывать технические зависимости&nbsp;— они могут&nbsp;быть как&nbsp;внутри бэклога команды, так и со смежными командами.</p>
   <p>DOD: список фичей поделен на&nbsp;MVP и следующие итерации.</p>
   <h4>Шаг 6. Проверяем календарь</h4>
   <p>Итак, мы оценили и дальше вроде всё просто&nbsp;— надо&nbsp;лишь раскидать на&nbsp;календарь. Но&nbsp;это не&nbsp;так. Вспоминаем зависимости, смотрим график отпусков, учитываем время на&nbsp;подготовку релизов и возможные аварии. Если еще неизвестно всё перечисленное, то можно смело добавить к&nbsp;оценке 20–30%.</p>
   <p>DOD: готовый график. Инструмент визуализации пока самый удобный для&nbsp;нас&nbsp;— это диаграмма Ганта.</p>
   <p>И это еще не&nbsp;всё. Не&nbsp;поленитесь после грумингов сравнить первичную оценку «пальцем в&nbsp;небо» и посмотреть среднюю разницу, которую стоит учитывать в&nbsp;будущем.</p>
   <h3>Вместо заключения</h3>
   <p>Груминг на&nbsp;первых фазах&nbsp;— это боль для&nbsp;команды. Поддерживайте, благодарите и делайте паузы во&nbsp;встречах. Первичная оценка решает задачу на 10%-20%, а&nbsp;сессий груминга может&nbsp;быть более 2-х, и к&nbsp;этому надо&nbsp;быть готовым. Например, есть неизвестные вводные, без&nbsp;которых просто нереально сделать даже примерные оценки, на&nbsp;уточнение которых необходим 1–2&nbsp;дня. А&nbsp;можно&nbsp;ли жить без&nbsp;первичных оценок? Наверное, можно. Но&nbsp;одна из&nbsp;задач владельца продукта&nbsp;— это управление ожиданием пользователей. Ответы а‑ля «возьмем в&nbsp;анализ и вернемся когда‑нибудь» на&nbsp;самый главный вопрос пользователя и стейкхолдера «Когда?» не&nbsp;подходят.</p>
   <p></p>
  </div>
 </div>
</div> <!----> <!---->