<div>
 <div class="article-formatted-body article-formatted-body article-formatted-body_version-2">
  <div xmlns="http://www.w3.org/1999/xhtml">
   <figure class="full-width ">
    <img src="https://habrastorage.org/r/w1560/getpro/habr/upload_files/0a9/6f4/bae/0a96f4bae2ddafb1c4e13d511b814694.png" width="2880" height="1620" data-src="https://habrastorage.org/getpro/habr/upload_files/0a9/6f4/bae/0a96f4bae2ddafb1c4e13d511b814694.png">
    <figcaption></figcaption>
   </figure>
   <p>В&nbsp;новый выпуск подкаста «Сушите вёсла» ребята позвали Андрея, инженера в&nbsp;области расчётов динамики ядерных реакторов, чтобы он&nbsp;рассказал, как сейчас обстоят дела в&nbsp;индустрии ядерной энергетики и&nbsp;что нас может ждать дальше. Традиционно обсудили, как присоединиться к&nbsp;такой команде, какие технологии используются в&nbsp;компании Андрея и&nbsp;бабахнет&nbsp;ли, если поделить на&nbsp;ноль в&nbsp;Fortran. В&nbsp;финале закопали немножко ядерных отходов и&nbsp;ушли в&nbsp;фотонный закат верить в&nbsp;лучшее.</p>
   <hr>
   <p><a href="https://dry.redmadrobot.dev/">«Сушите вёсла»</a>&nbsp;— подкаст про разработку, аналитику, тестирование и&nbsp;всё, что связано с&nbsp;созданием ИТ-продуктов. Авторы&nbsp;— ведущий android-разработчик <a href="https://redmadrobot.ru/">red_mad_robot</a> Рома Чорыев и&nbsp;разработчик Артём Кулаков.</p>
   <p>Слушайте весь подкаст <a href="https://dry.mave.digital/ep-23">по&nbsp;ссылке</a> или читайте короткую выжимку&nbsp;— ответы на&nbsp;шесть главных вопросов выпуска.</p>
   <h2>Тайминг</h2>
   <ul>
    <li><p>02:35&nbsp;— чем&nbsp;же всё-таки занимается Андрей</p></li>
    <li><p>06:10&nbsp;— что и&nbsp;как делают программисты в&nbsp;ядерной индустрии</p></li>
    <li><p>11:40&nbsp;— как выглядит программирование процессов в&nbsp;реакторе</p></li>
    <li><p>15:11&nbsp;— как Андрей попал в&nbsp;профессию</p></li>
    <li><p>16:11&nbsp;— на&nbsp;чём пишут «ядерные» программисты</p></li>
    <li><p>20:40&nbsp;— про среду разработки и&nbsp;отладку кода</p></li>
    <li><p>22:38&nbsp;— что с&nbsp;лицензиями для Fortran</p></li>
    <li><p>26:00&nbsp;— про утилитарность и&nbsp;встраиваемость программ</p></li>
    <li><p>26:40&nbsp;— как устроена работа</p></li>
    <li><p>30:27&nbsp;— какой возрастной разброс среди специалистов</p></li>
    <li><p>31:38&nbsp;— почему не&nbsp;используется машинное обучение</p></li>
    <li><p>35:15&nbsp;— про сложности при разработке и&nbsp;отладке</p></li>
    <li><p>36:49&nbsp;— как программировать без интернета</p></li>
    <li><p>40:16&nbsp;— что будет в&nbsp;случае ошибки</p></li>
    <li><p>45:00&nbsp;— нужна&nbsp;ли информационная безопасность ядерной области</p></li>
    <li><p>47:55&nbsp;— про будни ядерных проектировщиков</p></li>
    <li><p>49:53&nbsp;— про таск-менеджеры</p></li>
    <li><p>52:15&nbsp;— про распределённые вычисления</p></li>
    <li><p>54:00&nbsp;— вход в&nbsp;профессию</p></li>
    <li><p>59:55&nbsp;— про будущее ядерных реакторов</p></li>
    <li><p>01:03:00&nbsp;— что делать с&nbsp;ядерными отходами</p></li>
   </ul>
   <blockquote>
    <p><strong>Дисклеймер: выпуск был записан 19&nbsp;июля 2022 года. По&nbsp;просьбе гостя мы&nbsp;не&nbsp;раскрываем его фамилию и место его работы.</strong></p>
   </blockquote>
   <h2>Что и&nbsp;как делают программисты в&nbsp;ядерной области</h2>
   <p>Герой этого выпуска, Андрей, занимается перспективными&nbsp;— то&nbsp;есть не&nbsp;действующими, а&nbsp;запланированными,&nbsp;— проектами. Представьте, что есть начальная версия проекта,&nbsp;— с&nbsp;ней Андрей работает как физик. Проверяет, что будет, если что-то пойдёт не&nbsp;так,&nbsp;— например, оператор нажмет не&nbsp;ту&nbsp;кнопку, какая-нибудь система выйдет из&nbsp;строя или отключится электричество. Задача Андрея&nbsp;— выяснить, как поведёт себя проект в&nbsp;разных экстремальных условиях, чтобы не&nbsp;случилось ничего похожего на&nbsp;серьезную аварию вроде той, что случилась на&nbsp;АЭС «Фукусима-1» в&nbsp;2011 году.</p>
   <p>После этого он&nbsp;решает задачу&nbsp;— выбирает готовый программный продукт или преобразует его под новый проект и&nbsp;новые цели. Чаще всего каждый новый проект требует своего собственного программного обеспечения.</p>
   <blockquote>
    <p><em>Говоря простыми словами, главное, для чего нужно программировании в&nbsp;области анализа безопасности ядерных реакторов&nbsp;— предсказать, что будет, когда реактор построят. По&nbsp;сути, я&nbsp;решаю системы физических уравнений, с&nbsp;помощью которых описываю, что происходит внутри реактора.</em></p>
    <p><strong>Андрей, инженер в&nbsp;области расчётов динамики ядерных реакторов</strong></p>
   </blockquote>
   <p>Раньше такие расчёты совершали без применения программирования&nbsp;— были специальные отделы людей, которые делали вычисления буквально на&nbsp;бумаге. Тогда считалось, что не&nbsp;нужно так много систем безопасности, как сейчас, да&nbsp;и&nbsp;технологически это было невозможно.</p>
   <p>Сегодня основной принцип безопасности подобных установок состоит в&nbsp;том, чтобы безопасность мало зависела от&nbsp;человеческого фактора, подвижных механизмов или компьютеров. Теперь есть возможность считать всё намного подробнее, поэтому вероятность ошибки становится практически нулевой.</p>
   <blockquote>
    <p><em>Появились более подробные физические модели, что позволяет делать более подробные расчёты, количество этих расчётов увеличилось, и&nbsp;их&nbsp;качество сильно выросло. Но&nbsp;задача остаётся прежней&nbsp;— сделать так, чтобы этот реактор был безопасным.</em></p>
    <p><strong>Андрей, инженер в&nbsp;области расчётов динамики ядерных реакторов</strong></p>
   </blockquote>
   <p>По&nbsp;словам гостя, его работа очень похожа на&nbsp;решение задач по&nbsp;физике из&nbsp;школы или института, только глубже.</p>
   <blockquote>
    <p><em>Используешь физические законы, математику, иногда геометрию, чтобы логично прийти к&nbsp;результату. Допустим, согласовали худший сценарий, что может происходить в&nbsp;этой проектируемой установке,&nbsp;— и&nbsp;мне нужно определить какие-то параметры внутри, которые позволят утверждать, что ничего важного там не&nbsp;расплавится, никто не&nbsp;заболеет лучевой болезнью.</em></p>
    <p><strong>Андрей, инженер в&nbsp;области расчётов динамики ядерных реакторов</strong></p>
   </blockquote>
   <h2>На&nbsp;чём пишут «ядерные» программисты и&nbsp;почему не&nbsp;используют Go&nbsp;и&nbsp;Rust</h2>
   <p>В&nbsp;отличие от&nbsp;общепринятого понимания программиста, который пишет свои продукты для пользования как можно большего количества людей, в&nbsp;ядерной индустрии всё наоборот. Здесь пишут для узкого круга&nbsp;— команды, поэтому важна скорость расчётов. В&nbsp;этой логике используется два языка программирования&nbsp;— либо Fortran, либо С++. Это связано с&nbsp;тем, что для них существуют системы, которые способны распараллелить такие расчёты и&nbsp;значительно сократить время. Для них есть специальная библиотека, которая работает исключительно с&nbsp;Fortran и&nbsp;с&nbsp;С++. Поэтому более современные языки пока использовать неудобно.</p>
   <blockquote>
    <p><em>От&nbsp;того, какой язык программирования мы&nbsp;используем, закон сохранения энергии никак не&nbsp;изменится. Поэтому язык, на&nbsp;самом деле, не&nbsp;так важен&nbsp;— код остаётся очень похожим, где&nbsp;бы ты&nbsp;его ни&nbsp;писал. Более важны удобство или то&nbsp;время, за&nbsp;которое ты&nbsp;должен выдать решение. Зачастую намного проще к&nbsp;большому, уже работающему продукту что-то добавить и&nbsp;выдать хороший результат, чем пытаться писать всё заново.</em></p>
    <p><strong>Андрей, инженер в&nbsp;области расчётов динамики ядерных реакторов</strong></p>
   </blockquote>
   <h2>Как устроена работа</h2>
   <p>Написанием программ занимаются команды из&nbsp;разных научных областей. Некоторые из&nbsp;них независимо делают похожие расчёты, которые сравниваются, чтобы исключить ошибку. Чтобы смоделировать всё, что происходит внутри реактора, нужны знания из&nbsp;разных областей физики.</p>
   <blockquote>
    <p><em>Я, например, специалист в&nbsp;области теплофизики и&nbsp;гидравлики, другие люди&nbsp;— в&nbsp;области ядерной физики. Каждый пишет свои отдельно работающие куски кода, и&nbsp;потом мы&nbsp;связываем их&nbsp;между собой.</em></p>
    <p><strong>Андрей, инженер в&nbsp;области расчётов динамики ядерных реакторов</strong></p>
   </blockquote>
   <p>Эти части кода объединяют определённые общие переменные, и&nbsp;в&nbsp;итоге они превращаются в&nbsp;одну большую программу, которая работает и&nbsp;объединяет в&nbsp;себе все эти области физики. Код распределяется через локальную сеть или диски&nbsp;— интернет на&nbsp;постоянной основе не&nbsp;используется, потому что это небезопасно.</p>
   <p>Но&nbsp;держать всё в&nbsp;голове невозможно. Чтобы проверить что-то&nbsp;— конструкцию, метод, формулу,&nbsp;— есть специальные компьютеры с&nbsp;доступом в&nbsp;интернет. Часто можно столкнуться не&nbsp;только с&nbsp;проблемами задачи, но&nbsp;и&nbsp;с&nbsp;проблемой языка программирования.</p>
   <blockquote>
    <p><em>Погуглить, например, подробную таблицу свойств воды, которая была измерена где-нибудь не&nbsp;в&nbsp;России, тоже часто необходимо. Часто на&nbsp;тех&nbsp;же самых форумах Fortran приходится решать какие-то проблемы языка.</em></p>
    <p><strong>Андрей, инженер в&nbsp;области расчётов динамики ядерных реакторов</strong></p>
   </blockquote>
   <h2>Какова цена ошибки</h2>
   <p>По&nbsp;словам Андрея, расчёты в&nbsp;ядерной области делаются с&nbsp;очень большим временным запасом, поэтому трудно представить, что допущенная сегодня ошибка не&nbsp;будет обнаружена и&nbsp;повлияет на&nbsp;что-то в&nbsp;будущем.</p>
   <p>Есть инженерная область знаний, связанная с&nbsp;вероятностным анализом, где люди занимаются расчётами вероятных событий. Кроме этого&nbsp;— множество различных проверок, абсолютно независимых друг от&nbsp;друга. Допущенная ошибка в&nbsp;программе всегда видна по&nbsp;несоответствию результатов, то&nbsp;есть где-то один параметр не&nbsp;будет соответствовать другому.</p>
   <blockquote>
    <p><em>Давайте вернёмся в&nbsp;школу&nbsp;— мы&nbsp;считали-считали какую-то задачку по&nbsp;физике, вроде всё хорошо посчитали, а&nbsp;какая-нибудь масса получается отрицательной. То&nbsp;же самое можно не&nbsp;часто, а&nbsp;просто увидеть в&nbsp;результатах расчётов, то, что один физический параметр не&nbsp;соответствует другому. Значит, это сигнализирует об&nbsp;ошибке.</em></p>
    <p><strong>Андрей, инженер в&nbsp;области расчётов динамики ядерных реакторов</strong></p>
   </blockquote>
   <p>Условия должны быть максимально консервативными и&nbsp;жёсткими, чтобы добиваться в&nbsp;конструкции того, чтобы даже при них какие-то параметры, важные для безопасности, были ниже определённого предела. Анализ безопасности должен быть максимально консервативным, чтобы на&nbsp;основе его результатов спроектировать лучший вариант конструкции реактора. Такая конструкция должна обеспечить непревышение пределов безопасности. Что&nbsp;бы ни&nbsp;случилось.</p>
   <h2>Как попасть в&nbsp;профессию</h2>
   <p>Если вам хочется писать программы для ядерных реакторов, нужно по&nbsp;такой специальности закончить технический вуз&nbsp;— МЭИ, Бауманку или МИФИ. А&nbsp;ещё очень хотеть программировать.</p>
   <p>Теоретически, если опытный программист несколько лет писал backend- или frontend-системы, послушал этот выпуск и&nbsp;загорелся темой,&nbsp;— он&nbsp;может заниматься такой работой, но&nbsp;нужно подтянуть физику. Но&nbsp;на&nbsp;практике, по&nbsp;словам Андрея, таких случаев он&nbsp;не&nbsp;встречал.</p>
   <blockquote>
    <p><em>Главное&nbsp;— желание. Понятно, что вуз или какая-то магистратура в&nbsp;течение нескольких лет даёт очень много, и&nbsp;параллельно её&nbsp;закончить&nbsp;— это лучшее решение.</em></p>
    <p><strong>Андрей, инженер в&nbsp;области расчётов динамики ядерных реакторов</strong></p>
   </blockquote>
   <p>Вероятно, в&nbsp;будущем индустрия сможет перестроиться, но&nbsp;сегодня первичные знания для этой работы&nbsp;— математика и&nbsp;физика, а&nbsp;не&nbsp;программирование. Однако сложно быть программистом без понимания логики, которая близка к&nbsp;математической.</p>
   <blockquote>
    <p><em>Это ответ на&nbsp;вопрос, нужна&nbsp;ли программисту математика и&nbsp;физика и&nbsp;зачем вас ими мучают в&nbsp;вузах, а&nbsp;вы&nbsp;плюётесь и&nbsp;говорите, что всю жизнь будете «фронтенды» писать.</em></p>
    <p><strong>Артём Кулаков, разработчик, ведущий подкаста «Сушите вёсла»</strong></p>
   </blockquote>
   <h2>Какое будущее у&nbsp;ядерных реакторов</h2>
   <p>Для ядерных реакторов существует много применений. Например, они могут вырабатывать электроэнергию, и&nbsp;это очень удобно, потому что ядерное топливо по&nbsp;сравнению с&nbsp;углём, газом и&nbsp;нефтью занимает очень мало места и&nbsp;более транспортабельно. С&nbsp;помощью ядерных реакторов получают лекарства&nbsp;— нарабатывают изотопы, которые потом используются в&nbsp;медицине. Есть и&nbsp;проекты, которые позволяют очень эффективно использовать топливо для получения электроэнергии, намного эффективнее, чем нефть или газ.</p>
   <p>Говоря о&nbsp;перспективности «зелёной» энергетики в&nbsp;сравнении с&nbsp;ядерной, Андрей считает, что в&nbsp;будущем будет использоваться комбинированный вариант.</p>
   <blockquote>
    <p><em>Всё-таки ветер и&nbsp;море требуют определённых условий&nbsp;— местности, ландшафта, а&nbsp;ядерная энергетика ничего не&nbsp;требует. Ты&nbsp;поставил реактор там, где удобно, и&nbsp;он&nbsp;работает, он&nbsp;компактный, к&nbsp;нему легко подвозить топливо, в&nbsp;том числе на&nbsp;каком-то автотранспорте, не&nbsp;нужно никаких особенных путей снабжения.</em></p>
    <p><strong>Андрей, инженер в&nbsp;области расчётов динамики ядерных реакторов</strong></p>
   </blockquote>
   <p>С&nbsp;точки зрения экономики на&nbsp;ядерные реакторы самые большие капитальные затраты по&nbsp;сравнению с&nbsp;другими станциями. Но&nbsp;зато потом непосредственно эксплуатация обходится в&nbsp;разы дешевле.</p>
   <h2>Полезные материалы</h2>
   <ol>
    <li><p><a href="https://nplus1.ru/news/2021/06/09/brest-now">Началось строительство опытного реактора на&nbsp;быстрых нейтронах БРЕСТ</a>&nbsp;— короткая статья о&nbsp;перспективах максимального использования топливаи ядерных циклах.</p></li>
    <li><p><a href="https://www.nikiet.ru/file/Belaya_kniga.pdf">Белая книга ядерной энергетики</a>&nbsp;— фундаментальный труд об&nbsp;этих концепциях под редакцией профессора Е.&nbsp;О.&nbsp;Адамова.</p></li>
   </ol>
   <hr>
   <p>Слушайте нас там, где удобно,&nbsp;— <a href="https://dry.mave.digital/">Mave</a>, <a href="https://podcasts.apple.com/ru/podcast/%D1%86%D0%B8%D1%84%D1%80%D0%BE%D0%B2%D1%8B%D0%B5-%D1%80%D0%BE%D0%B1%D0%B8%D0%BD%D0%B3%D1%83%D0%B4%D1%8B-%D1%8D%D0%BF%D0%B8%D0%B7%D0%BE%D0%B4-19/id1466243923?i=1000560432229">Apple</a>, <a href="https://podcasts.google.com/feed/aHR0cHM6Ly9jbG91ZC5tYXZlLmRpZ2l0YWwvMzI2NjM/episode/Njc1MDBjMGQtM2ZhYi00MWM2LTgxNzUtMjA3NTBhNDQ0NTE1?sa=X&amp;ved=0CAUQkfYCahcKEwiw98T_uYb4AhUAAAAAHQAAAAAQDg">Google Podcasts</a>, <a href="https://music.yandex.ru/album/9303111/track/104503350">Яндекс.Музыка</a>.</p>
   <h2>Предыдущие выпуски подкаста «Сушите вёсла»</h2>
   <ol>
    <li><p><a href="https://dry.redmadrobot.dev/issue_20">Криптономикон 2022</a>: технология блокчейн и&nbsp;её&nbsp;проблемы&nbsp;— хитросплетения смарт-контрактов, Византийский консенсус, взлёт и&nbsp;падение рынка NFT и&nbsp;программисты новой&nbsp;эры.</p></li>
    <li><p><a href="https://dry.redmadrobot.dev/issue_19">Цифровые робингуды</a>: про «чёрных» и&nbsp;«белых» хакеров, bug bounty и&nbsp;куда пойти опытному исследователю безопасности</p></li>
    <li><p><a href="https://vc.ru/life/349841-yura-my-vse-poehali-ili-chto-delat-programmistu-v-kosmonavtike">«Юра, мы&nbsp;всё… Поехали!»</a>: что делать программисту в&nbsp;космонавтике.</p></li>
   </ol>
   <p>Приходите в&nbsp;наш <a href="https://t.me/joinchat/ArSuoxQKOVe7eM0KjJBMcg">телеграм-чат</a>&nbsp;— задать вопросы о&nbsp;ядерной индустрии и&nbsp;поболтать о&nbsp;том о&nbsp;сём.</p>
   <p><strong>Над материалом работали:</strong></p>
   <p>текст, редактура — Ника Черникова,</p>
   <p>иллюстрация — Марина Черникова.</p>
   <p></p>
  </div>
 </div>
</div> <!----> <!---->