<div>
 <div class="article-formatted-body article-formatted-body article-formatted-body_version-2">
  <div xmlns="http://www.w3.org/1999/xhtml">
   <p>Навеяно <a href="https://habr.com/ru/company/productivity_inside/blog/703038/" rel="noopener noreferrer nofollow"><u>статьёй с&nbsp;тем&nbsp;же названием</u></a>.</p>
   <p>Вначале разберем сам вопрос: Что&nbsp;такое «можно сказать»? Кто это может сказать? Какая информация доступна оценивающему? Вариантов как&nbsp;минимум три, для&nbsp;которых хотя&nbsp;бы эти аспекты относительно известны. Первый&nbsp;— сам человек, второй&nbsp;— его ближнее окружение, включая работодателя (каковой может потянуть на&nbsp;отдельный пункт), третий&nbsp;— совершенно посторонний человек. И из&nbsp;этих вариантов ни один не&nbsp;является достаточно простым, чтобы сжать ответ на&nbsp;этот вопрос в&nbsp;один абзац.</p>
   <h4>Первый вариант - "я сам"</h4>
   <p>Вопрос в&nbsp;этом варианте звучит так: «Когда я смог сказать, что&nbsp;стал программистом?».</p>
   <p>Сам человек о&nbsp;себе владеет достаточно большим объемом информации, включая&nbsp;личностный опыт, отношения к&nbsp;технике, скрытые переживания и многое другое, и подчас некоторые именно скрытые данные могут определить, когда именно произошло изменение внутреннего состояния индивидуума с «не программист» на «программист». В&nbsp;комментариях к&nbsp;исходной статье&nbsp;был описан один случай, где автор определил изменение состояния в&nbsp;момент, когда он понял скрытое за&nbsp;кодом действие, выполняемое компьютером. То есть, один из&nbsp;возможных ответов&nbsp;— «когда я первый раз понял алгоритм программы».</p>
   <p>Моя история становления программистом не&nbsp;настолько яркая, и не&nbsp;имеет явной точки перехода, но&nbsp;в&nbsp;ней есть интервал перехода&nbsp;— от&nbsp;первого вопроса учителю программирования в&nbsp;ДНТТМ «а как&nbsp;вводить данные в&nbsp;Паскале?» вместо того, чтобы задавать значения переменным прямо в&nbsp;коде, когда я определил для&nbsp;себя, что&nbsp;именно хочу стать программистом, хочу уметь заставлять компьютеры слушаться меня, до&nbsp;первого курса института, где в&nbsp;качестве задания у&nbsp;нас&nbsp;была реализация трехмерной графики с&nbsp;заливкой по&nbsp;Гуро или&nbsp;как&nbsp;кто умел, и написанной самостоятельно даже не&nbsp;самой программы, занимающейся отрисовкой, а&nbsp;программы‑конвертера моделей из&nbsp;какого‑то трехмерного редактора, от&nbsp;которого я раздобыл файлы с&nbsp;моделями, в&nbsp;мой тупой как&nbsp;валенок бинарный формат данных. То есть, до&nbsp;момента, когда появившуюся у&nbsp;меня проблему я решил с&nbsp;использованием компьютера и самостоятельно написанной программы. Следовательно, второй из&nbsp;возможных ответов&nbsp;— «когда я первый раз написал программу для&nbsp;решения моей задачи или&nbsp;проблемы».</p>
   <p>В&nbsp;процессе&nbsp;был как&nbsp;минимум один раз, когда я для&nbsp;отца писал программу расчета трансформатора по&nbsp;имеющимся требованиям&nbsp;— одна обмотка столько‑то вольт столько‑то ампер, вторая 220&nbsp;вольт, требовалось узнать число витков и толщину провода для&nbsp;каждой из&nbsp;обмоток. Но&nbsp;в&nbsp;тот раз, хотя я и написал для&nbsp;этого код на&nbsp;бейсике ZX Spectrum, программистом я себя считать ещё не&nbsp;начал. А&nbsp;значит, какие‑то неучтенные факторы влияют на&nbsp;решение считать себя «уже программистом» или&nbsp;нет. То есть, общий ответ, если он существует, является рекурсивным: «Когда я сделал что‑то, что&nbsp;дает мне право считать, что&nbsp;я стал программистом». Как‑то недетерминированно, не&nbsp;находите? И это ещё до&nbsp;того, как&nbsp;было определено понятие «программист»...</p>
   <h4>Второй вариант - "ближайшее окружение"</h4>
   <p>Сюда входят родители, супруги, дети, одноклассники, родичи, коллеги и прочие люди, которые общаются с&nbsp;субъектом вопроса. И сам вопрос формулируется так: «Когда я смог сказать, что&nbsp;ТЫ стал программистом?». А&nbsp;вот здесь требуется определить, помимо слова «можно», или «я смог», ещё и слово «программист», так как&nbsp;для&nbsp;разных людей это понятие означает спектр знаний, умений, возможностей и занятий, подчас не&nbsp;имеющий совпадений для&nbsp;некоторых людей даже из&nbsp;ближнего окружения человека. В&nbsp;такой постановке ответ является субъективным чуть более, чем полностью, и для&nbsp;нахождения хотя&nbsp;бы общего знаменателя для&nbsp;большинства групп потребуется слишком развернутый анализ. Проще&nbsp;было&nbsp;бы просто отмести этот вариант как&nbsp;заведомо слишком субъективный для&nbsp;статьи, но&nbsp;некоторые частные случаи можно хотя&nbsp;бы нечетко описать, что&nbsp;постараюсь сделать.</p>
   <p>Можно попробовать поискать ответы для&nbsp;обособленных групп, скажем, для&nbsp;одноклассников, при&nbsp;условии, что&nbsp;сам человек уже смог определить себя как «программиста» по&nbsp;одному из&nbsp;определений, разделяемых, хотя&nbsp;бы частично, одноклассниками. Вариантов ответа все равно будет спектр, начиная от «когда ты взломал игрушку на&nbsp;бесконечные жизни», даже если это&nbsp;был POKE 32&nbsp;891,0, вычитанный из&nbsp;книги «300&nbsp;игр для&nbsp;ZX Spectrum», до&nbsp;условного «когда ты мне дал списать на&nbsp;информатике, и я пятерку получил» или «когда ты показал мне, как&nbsp;рисовать&nbsp;линии на&nbsp;компьютере».</p>
   <p>Для&nbsp;родственников, в&nbsp;частности, родителей, владеющих куда большим объемом данных о&nbsp;субъекте, может существовать более детерминированный критерий. Увлечение ребенка компьютерами&nbsp;бывает в&nbsp;разных формах, вплоть до&nbsp;залипания в&nbsp;каких‑то играх без&nbsp;видимой пользы (для родителей), и не&nbsp;всегда из&nbsp;увлекающихся компьютерами, да&nbsp;даже и «айти», получаются программисты. Таким образом, в&nbsp;качестве «вехи становления программистом» может выступать какое‑то достижение ребенка, которое родители относят к&nbsp;программированию в&nbsp;том смысле, в&nbsp;котором они это понимают. Это может&nbsp;быть и то, что&nbsp;отпрыск поделился впечатлениями от <a href="https://habr.com/ru/company/timeweb/blog/714040/" rel="noopener noreferrer nofollow">игры на&nbsp;МК-54</a>, которую он успешно прошел или&nbsp;вообще «взломал», и победа (или участие) в&nbsp;каком‑то конкурсе в&nbsp;школе, институте или&nbsp;на&nbsp;работе (мало&nbsp;ли!), где нужно&nbsp;было что‑то алгоритмически решить, или&nbsp;дошедшее до&nbsp;них мнение учителей, одноклассников, ещё кого‑либо, что «ваш ребенок такой умный, он мне комп починил двумя пальцами!» и тому подобное. В&nbsp;том числе и помощь родителям в&nbsp;чем‑то с&nbsp;использованием компьютера. Обычно такие вехи становления запоминаются в&nbsp;семье, и потом являются поводом для&nbsp;хвастовства во&nbsp;внешнем кругу, и становятся известны и используемы самим человеком&nbsp;— если его собственный «фазовый переход» не&nbsp;произошел раньше.</p>
   <p>Для&nbsp;работодателя, как&nbsp;отдельного человека в&nbsp;окружении программиста, чаще всего ответом будет «когда я о&nbsp;тебе узнал как&nbsp;о&nbsp;программисте». Если человек нанимается компанией‑разработчиком ПО, он априори считается программистом, неважно даже, на&nbsp;какой позиции&nbsp;— ни архитектор, ни тимлид, ни тестировщик, на&nbsp;QA, ни даже UI‑дизайнер не&nbsp;сможет нормально работать, если не&nbsp;будет хотя&nbsp;бы понимать в&nbsp;программировании, чего по&nbsp;мнению работодателя может&nbsp;быть достаточно, чтобы назвать человека программистом. Если деятельность человека напрямую не&nbsp;связана с&nbsp;программированием, подобное узнавание может произойти и позже. Например, оператор станков с&nbsp;ЧПУ может&nbsp;быть программистом, а&nbsp;может и не&nbsp;быть, смотря по&nbsp;тому, как&nbsp;он управляется со своим инструментом. Мой отец в&nbsp;этом плане программистом&nbsp;был, я помню, как&nbsp;он заявлял «эти программисты при&nbsp;написании программы обработки не&nbsp;учитывают крепеж детали, приходится переделывать». В&nbsp;то&nbsp;же время некоторые его коллеги на&nbsp;заводе так не&nbsp;умели, а&nbsp;возможно, и не&nbsp;хотели уметь, отчего программистами не&nbsp;считались. Какой‑нибудь завсклад,&nbsp;желающий облегчить себе работу, может написать какую‑то автоматизацию учета помимо той, что&nbsp;ведется в&nbsp;организации, или&nbsp;дополнить её какой‑то метрикой, и это может стать точкой отсчета для&nbsp;его начальства расценивать его как&nbsp;программиста. Или&nbsp;модное сейчас движение «войти вайти», прихватившее работника откуда попало и мотивировавшее его «стать программистом» в&nbsp;каком‑либо смысле, с&nbsp;заметным для&nbsp;его работодателя эффектом (в том числе увольнением для&nbsp;поиска работы по&nbsp;новой специальности) также может породить изменение отношения к&nbsp;нему.</p>
   <h4>Третий вариант - "посторонний"</h4>
   <p>Сюда входят люди, узнавшие или&nbsp;знающие некоторого человека, и имеющие доступ к&nbsp;каким‑либо публичным данным о&nbsp;нем, включая статьи на&nbsp;Хабре или&nbsp;профили в&nbsp;соцсетях. Так как&nbsp;их слишком много, то вопрос в&nbsp;формулировке второго варианта не&nbsp;имеет смысла, и задавать его следует в&nbsp;более общем виде. Например, так: «Когда достаточно большое множество посторонних данному человеку людей начало называть его программистом?».</p>
   <p>Вот к&nbsp;этому варианту подходит большинство ответов из&nbsp;комментариев к&nbsp;исходной статье. «Когда он первый раз (implicit) начал работать программистом», «когда получил „программист“ в&nbsp;диплом», «когда его программа стала известной», и&nbsp;т.&nbsp;д. Здесь нет однозначно правильного ответа, мало того, люди, в&nbsp;отношении которых задается подобный вопрос, могут и слова‑то такого не&nbsp;знать&nbsp;— «программист» (была&nbsp;ли <a href="https://ru.wikipedia.org/wiki/%D0%9B%D0%B0%D0%B2%D0%BB%D0%B5%D0%B9%D1%81,_%D0%90%D0%B4%D0%B0" rel="noopener noreferrer nofollow">Ада Лавлейс</a> программистом? Мой ответ&nbsp;— да, но&nbsp;самого понятия тогда могло не&nbsp;существовать), к&nbsp;части людей может&nbsp;быть неприменим любой из&nbsp;вариантов «общепринятого» ответа, вплоть до&nbsp;всех, кроме одного&nbsp;— если неприменимы все, то его программистом ещё не&nbsp;начали называть, некоторые персоны вообще могут&nbsp;быть виртуальными (привет, Алиса) и в&nbsp;то&nbsp;же время писать код (привет, ЧатГПТ‑бот), и так далее, поэтому в&nbsp;качестве «универсального» ответа предлагаю взять обобщенное ИЛИ&nbsp;на&nbsp;подмножество «элементарных» ответов из&nbsp;этого набора, с&nbsp;которыми согласны&nbsp;лично вы.</p>
   <h4>Комментарии к ответам, приведенным в самой статье</h4>
   <p>Вообще говоря, ответы, приведенные в&nbsp;изначальной статье, содержат в&nbsp;скрытой форме дополнительные классификаторы типа «хороший», определенные говорящим. Даже первый ответ «Когда он способен абстрагироваться от&nbsp;инструментов» уже содержит такой классификатор. Многие программисты, особенно для&nbsp;платформ, стесненных в&nbsp;ресурсах, не&nbsp;могут абстрагироваться от&nbsp;своей платформы, а&nbsp;инструмент у&nbsp;них в&nbsp;целом единственный&nbsp;— машинные коды или&nbsp;ассемблер для&nbsp;конкретной&nbsp;железки, плюс транслятор с&nbsp;Си‑подобного языка (или просто с&nbsp;Си с&nbsp;расширениями под&nbsp;платформу), потому что&nbsp;более «навороченный» код с&nbsp;абстракциями не&nbsp;сможет вместиться в&nbsp;его оперативную память. И если кто‑то скажет, что&nbsp;это не&nbsp;программисты, я ему скажу, что&nbsp;он глубоко неправ.</p>
   <p>Из&nbsp;спектра ответов выделяется шестой, на&nbsp;который многие комментаторы указали: «Когда он понимает принцип действия операторов if, then, else в&nbsp;сочетании с&nbsp;циклами for и так далее». В&nbsp;сущности, этот ответ означает «когда человек понимает принципы в&nbsp;алгоритмах и способен их перенести в&nbsp;код». По&nbsp;мне, более точным&nbsp;был&nbsp;бы вариант «когда человек умеет алгоритмически мыслить». Просто преобразовать&nbsp;жестко заданный алгоритм в&nbsp;код уже и нейросеть умеет, а&nbsp;концепция RSL, если кто помнит, заключалась (для меня, когда его у&nbsp;нас проходили) в&nbsp;задании алгоритма в&nbsp;виде блок‑схемы, что&nbsp;просто снимало требования на&nbsp;знание языка программирования, но&nbsp;в&nbsp;явном виде требовало понимание блок‑схем как&nbsp;средства записи алгоритмов. И вот такой ответ больше похож на&nbsp;универсальный и объективный, и может подойти в&nbsp;качестве критерия необходимости для&nbsp;определения, является&nbsp;ли человек программистом, и в&nbsp;его собственной ретроспективе, когда он им стал.</p>
   <h4>А когда человек перестает быть программистом?</h4>
   <p>Когда умирает. И то это не&nbsp;точно.</p>
   <p></p>
  </div>
 </div>
</div> <!----> <!---->